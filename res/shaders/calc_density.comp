#version 460 core
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_scalar_block_layout : enable
#extension GL_EXT_buffer_reference_uvec2 : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_debug_printf : enable //debugPrintfEXT

#include "util.glsl"
#include "functions/4dnoise.glsl"

layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout (std430, set = 0, binding = 0) uniform UniformBuffer {
    uniform_data uni;
};

layout (std140, set = 1, binding = 0) uniform ComputeUniformBuffer {
    compute_uniform_data cUni;
};

layout (scalar, set = 1, binding = 2) restrict writeonly buffer DensityBuffer{
    float densities[];
};

layout (scalar, set = 1, binding = 3) restrict writeonly buffer SharedBuffer{
    uint vertexWriteHead;
};

float density(vec3 pos){
    float t = uni.time*uni.mesh_gen.time_multiplier+uni.mesh_gen.time_offset;
    float nv = fnoise(vec4(pos,t),uni.mesh_gen.scale,uni.mesh_gen.octaves);
    return clamp(nv * uni.mesh_gen.post_multiplier,0.0,1.0);
}

float sphere(vec3 pos){
//    float d = abs(pos.x - 8) + abs(pos.y - 8) + abs(pos.z - 8);
    float d = distance(pos,vec3(16));
    return 1.0-clamp(d/float(16),0.0,1.0);
}

void main() {

    if(gl_GlobalInvocationID.x >= cUni.side_voxel_count ||
       gl_GlobalInvocationID.y >= cUni.side_voxel_count ||
       gl_GlobalInvocationID.z >= cUni.side_voxel_count) {
        return;
    }

    uint i = gl_GlobalInvocationID.z * cUni.side_voxel_count*cUni.side_voxel_count +
             gl_GlobalInvocationID.y * cUni.side_voxel_count +
             gl_GlobalInvocationID.x;

    if(i == 0) {
        vertexWriteHead = 0u;
    }

    densities[i] = uni.d.toggles[0] == 1 ? sphere(gl_GlobalInvocationID) : density(gl_GlobalInvocationID);

    if(uni.d.toggles[1] != 1 && (
       gl_GlobalInvocationID.x >= cUni.side_voxel_count-3 ||
       gl_GlobalInvocationID.y >= cUni.side_voxel_count-3 ||
       gl_GlobalInvocationID.z >= cUni.side_voxel_count-3 ||
       gl_GlobalInvocationID.x < 4 ||
       gl_GlobalInvocationID.y < 4 ||
       gl_GlobalInvocationID.z < 4)){
        densities[i] = uni.d.toggles[2] == 1 ? 1.0 : 0.0;
    }


}